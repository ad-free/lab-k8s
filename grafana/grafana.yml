apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  type: NodePort
  selector:
    name: grafana
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: grafana
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      name: grafana
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: grafana
    spec:
      containers:
        - image: grafana/grafana
          imagePullPolicy: IfNotPresent
          name: grafana
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            limits:
              cpu: 2000m
              memory: "4Gi"
            requests:
              cpu: 2000m
              memory: "2Gi"
          volumeMounts:
            - name: data
              mountPath: /var/lib/grafana
            - name: config
              mountPath: /etc/grafana
            - name: log
              mountPath: /var/log/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: false
            - name: grafana-default-dashboard
              mountPath: /etc/grafana/provisioning/dashboards
            
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: grafana-config
        - name: grafana-datasources
          configMap:
            defaultMode: 420
            name: grafana-datasources
        - name: grafana-default-dashboard
          configMap:
            defaultMode: 420
            name: grafana-dashboard
        - name: log
          emptyDir: {}
